// These instructions have been successfully tested on Linux, most of it should work on Windows with the Git Bash shell.

// Note: Replace all instances of "YOUR_USERNAME" with whatever your sourceforge username is

// If you don't already have git installed, then install it:
sudo apt-get install git // for Ubuntu/Debian
pacman -S git // for Arch Linux
// or go to "http://git-scm.com/downloads", download the exe and install that for Windows
// There are a few GUI's for Linux and Windows, but I'm not yet sure how well they will work.

// You need to generate an ssh key:
ssh-keygen -t dsa -C "YOUR_USERNAME@shell.sf.net" // Works on Linux and Windows (under the git bash shell)
// Or you can use putty on Windows to generate one
// Upload the generated public key to your sourceforge account.

// Clone the current repository
git clone git://git.code.sf.net/p/zombiegame/code zombiegame-code

// Go into the directory
cd zombiegame-code

// Add the remote repository path
git remote add origin ssh://YOUR_USERNAME_GOES_HERE@git.code.sf.net/p/zombiegame/code
// If this returns an error, run this: "git remote rm origin" - without quotes

//Set your username and email! Your email would be the email account you used to sign up for sourceforge.
git config --global user.name "YOUR_USERNAME"
git config --global user.email "YOUR_EMAIL"

// Maybe this sets the upstream thing or something, idk, but I think you need to run it
git push origin master

// Important! - Actually this might be deprecated or something, not sure, but try running it anyway
git branch --set-upstream master origin/master

// After all of this, make sure your settings look similar to this, by running:
git config --list
// This will return something like this:
user.name=YOUR_USERNAME
user.email=YOUR_EMAIL
core.repositoryformatversion=0
core.filemode=true
core.bare=false
core.logallrefupdates=true
remote.origin.url=ssh://YOUR_USERNAME@git.code.sf.net/p/zombiegame/code
remote.origin.fetch=+refs/heads/*:refs/remotes/origin/*
branch.master.remote=origin
branch.master.merge=refs/heads/master

// You should be good to go now!

// Check status
git status

// Try adding or changing files, then doing a commit, and push the change to the remote repository.
git add file.txt
git commit -m 'Made changes to x."
git push
